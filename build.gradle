
buildscript {
    ext {
        springBootVersion = '2.1.0.M2'
    }
    repositories {
        mavenCentral()

        // Added for Java 11 for the google plugins to determine platform dependencies
        maven {url "https://plugins.gradle.org/m2/"}

        mavenLocal()

        // Since Gradle has no support for Maven BOM's which handle the Reactor libraries
        // Use the spring dependency management plugin, and pull from Spring repos.
        maven { url 'http://repo.spring.io/milestone' }
        maven { url 'http://repo.spring.io/snapshot' }
    }
    dependencies {
        // Java 11 dependencies for platform identification
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
        classpath "org.javamodularity:moduleplugin:1.1.1"

        // Spring-boot
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        // Project reactor dependencies (Spring or no-Spring)
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// Java 11 platform and module management
apply plugin: 'com.google.osdetector'
apply plugin: "org.javamodularity.moduleplugin"

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os
sourceCompatibility = 11

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url 'https://repo.spring.io/libs-release' }
    maven { url 'https://repo.spring.io/libs-milestone' }
}

dependencyManagement {
    imports {
        // Release documentation here --> https://projectreactor.io/docs
        //mavenBom "io.projectreactor:reactor-bom:Bismuth-RELEASE"
    }
}

dependencies {

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-data-rest')
    implementation('org.springframework.boot:spring-boot-devtools')

    runtime('com.h2database:h2')

    // Mick - fails without this and the --add-modules for java.xml.bind
    // Java.xml.bind is deprecated in future versions of java
    implementation('javax.xml.bind:jaxb-api:2.3.0')

    // Used for escaping the quote strings before making the HTTP requests
    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    implementation('org.apache.commons:commons-text:1.2')

    // Used for parsing Json responses from the Yahoo finance service
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.4'

    // https://mvnrepository.com/artifact/com.sun.activation/javax.activation
    //implementation group: 'com.sun.activation', name: 'javax.activation', version: '1.2.0'

    // Add the Spring web-flux reactive library to all sub-projects
    implementation('io.projectreactor:reactor-core')

    // Logback/Slf4j logging is shared across all sub-projects
    //compile('org.slf4j:slf4j-api:1.7.25')
    //compile('ch.qos.logback:logback-classic:1.2.3')

    testImplementation('io.projectreactor:reactor-test')

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.3.1')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')

    //testImplementation "org.mockito:mockito-core:2.+"
    //testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')

    // Fix a bunch of module errors where a module tries to lookup a package from
    // more than one module. Exclude the culprits below.
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit' //by both name and group
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
        //exclude group: 'com.vaadin.external.google', module: 'android-json'
        //exclude group: 'org.jboss.logging', module: 'jboss-logging'
        exclude group: 'org.skyscreamer', module: 'jsonassert'
        exclude group: 'org.xmlunit', module: 'xmlunit-core'

    }
}

test {
    useJUnitPlatform()
    testLogging {
        // Make sure output from standard out or error is shown in Gradle output.
        showStandardStreams = true

        // Or we use events method:
        // events 'standard_out', 'standard_error'
    }
}

compileJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath
        ]
    }
}

compileTestJava {
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath
        ]
    }
}


